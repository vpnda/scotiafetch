/*
secure.scotiabank.com.har Mitmproxy2Swagger

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiCardsCardIdGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCardsCardIdGet200ResponseData{}

// ApiCardsCardIdGet200ResponseData struct for ApiCardsCardIdGet200ResponseData
type ApiCardsCardIdGet200ResponseData struct {
	IsEligible *bool `json:"isEligible,omitempty"`
	HasMultipleCards *bool `json:"hasMultipleCards,omitempty"`
	PlasticCards []ApiCardsCardIdGet200ResponseDataPlasticCardsInner `json:"plasticCards,omitempty"`
	Provider *string `json:"provider,omitempty"`
}

// NewApiCardsCardIdGet200ResponseData instantiates a new ApiCardsCardIdGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCardsCardIdGet200ResponseData() *ApiCardsCardIdGet200ResponseData {
	this := ApiCardsCardIdGet200ResponseData{}
	return &this
}

// NewApiCardsCardIdGet200ResponseDataWithDefaults instantiates a new ApiCardsCardIdGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCardsCardIdGet200ResponseDataWithDefaults() *ApiCardsCardIdGet200ResponseData {
	this := ApiCardsCardIdGet200ResponseData{}
	return &this
}

// GetIsEligible returns the IsEligible field value if set, zero value otherwise.
func (o *ApiCardsCardIdGet200ResponseData) GetIsEligible() bool {
	if o == nil || IsNil(o.IsEligible) {
		var ret bool
		return ret
	}
	return *o.IsEligible
}

// GetIsEligibleOk returns a tuple with the IsEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCardsCardIdGet200ResponseData) GetIsEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEligible) {
		return nil, false
	}
	return o.IsEligible, true
}

// HasIsEligible returns a boolean if a field has been set.
func (o *ApiCardsCardIdGet200ResponseData) HasIsEligible() bool {
	if o != nil && !IsNil(o.IsEligible) {
		return true
	}

	return false
}

// SetIsEligible gets a reference to the given bool and assigns it to the IsEligible field.
func (o *ApiCardsCardIdGet200ResponseData) SetIsEligible(v bool) {
	o.IsEligible = &v
}

// GetHasMultipleCards returns the HasMultipleCards field value if set, zero value otherwise.
func (o *ApiCardsCardIdGet200ResponseData) GetHasMultipleCards() bool {
	if o == nil || IsNil(o.HasMultipleCards) {
		var ret bool
		return ret
	}
	return *o.HasMultipleCards
}

// GetHasMultipleCardsOk returns a tuple with the HasMultipleCards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCardsCardIdGet200ResponseData) GetHasMultipleCardsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMultipleCards) {
		return nil, false
	}
	return o.HasMultipleCards, true
}

// HasHasMultipleCards returns a boolean if a field has been set.
func (o *ApiCardsCardIdGet200ResponseData) HasHasMultipleCards() bool {
	if o != nil && !IsNil(o.HasMultipleCards) {
		return true
	}

	return false
}

// SetHasMultipleCards gets a reference to the given bool and assigns it to the HasMultipleCards field.
func (o *ApiCardsCardIdGet200ResponseData) SetHasMultipleCards(v bool) {
	o.HasMultipleCards = &v
}

// GetPlasticCards returns the PlasticCards field value if set, zero value otherwise.
func (o *ApiCardsCardIdGet200ResponseData) GetPlasticCards() []ApiCardsCardIdGet200ResponseDataPlasticCardsInner {
	if o == nil || IsNil(o.PlasticCards) {
		var ret []ApiCardsCardIdGet200ResponseDataPlasticCardsInner
		return ret
	}
	return o.PlasticCards
}

// GetPlasticCardsOk returns a tuple with the PlasticCards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCardsCardIdGet200ResponseData) GetPlasticCardsOk() ([]ApiCardsCardIdGet200ResponseDataPlasticCardsInner, bool) {
	if o == nil || IsNil(o.PlasticCards) {
		return nil, false
	}
	return o.PlasticCards, true
}

// HasPlasticCards returns a boolean if a field has been set.
func (o *ApiCardsCardIdGet200ResponseData) HasPlasticCards() bool {
	if o != nil && !IsNil(o.PlasticCards) {
		return true
	}

	return false
}

// SetPlasticCards gets a reference to the given []ApiCardsCardIdGet200ResponseDataPlasticCardsInner and assigns it to the PlasticCards field.
func (o *ApiCardsCardIdGet200ResponseData) SetPlasticCards(v []ApiCardsCardIdGet200ResponseDataPlasticCardsInner) {
	o.PlasticCards = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ApiCardsCardIdGet200ResponseData) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCardsCardIdGet200ResponseData) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ApiCardsCardIdGet200ResponseData) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ApiCardsCardIdGet200ResponseData) SetProvider(v string) {
	o.Provider = &v
}

func (o ApiCardsCardIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCardsCardIdGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsEligible) {
		toSerialize["isEligible"] = o.IsEligible
	}
	if !IsNil(o.HasMultipleCards) {
		toSerialize["hasMultipleCards"] = o.HasMultipleCards
	}
	if !IsNil(o.PlasticCards) {
		toSerialize["plasticCards"] = o.PlasticCards
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	return toSerialize, nil
}

type NullableApiCardsCardIdGet200ResponseData struct {
	value *ApiCardsCardIdGet200ResponseData
	isSet bool
}

func (v NullableApiCardsCardIdGet200ResponseData) Get() *ApiCardsCardIdGet200ResponseData {
	return v.value
}

func (v *NullableApiCardsCardIdGet200ResponseData) Set(val *ApiCardsCardIdGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCardsCardIdGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCardsCardIdGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCardsCardIdGet200ResponseData(val *ApiCardsCardIdGet200ResponseData) *NullableApiCardsCardIdGet200ResponseData {
	return &NullableApiCardsCardIdGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiCardsCardIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCardsCardIdGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


