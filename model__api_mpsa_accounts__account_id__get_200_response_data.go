/*
secure.scotiabank.com.har Mitmproxy2Swagger

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiMpsaAccountsAccountIdGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMpsaAccountsAccountIdGet200ResponseData{}

// ApiMpsaAccountsAccountIdGet200ResponseData struct for ApiMpsaAccountsAccountIdGet200ResponseData
type ApiMpsaAccountsAccountIdGet200ResponseData struct {
	Key *string `json:"key,omitempty"`
	Id *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	Description *string `json:"description,omitempty"`
	DaysFromStartDate *string `json:"daysFromStartDate,omitempty"`
	Alias NullableString `json:"alias,omitempty"`
	PrimaryBalance *ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner `json:"primaryBalance,omitempty"`
	AvailableBalance NullableString `json:"availableBalance,omitempty"`
	Holds NullableString `json:"holds,omitempty"`
	Interest *ApiMpsaAccountsAccountIdGet200ResponseDataInterest `json:"interest,omitempty"`
	InterestRates []ApiMpsaAccountsAccountIdGet200ResponseDataInterestRatesInner `json:"interestRates,omitempty"`
	BankTheRest NullableString `json:"bankTheRest,omitempty"`
	OverdraftLimit NullableString `json:"overdraftLimit,omitempty"`
	OverdraftPlan NullableString `json:"overdraftPlan,omitempty"`
	OpeningDate NullableString `json:"openingDate,omitempty"`
	AssociatedAccounts []interface{} `json:"associatedAccounts,omitempty"`
	BusinessFunctions []ApiMpsaAccountsAccountIdGet200ResponseDataBusinessFunctionsInner `json:"businessFunctions,omitempty"`
	ClosingDate NullableString `json:"closingDate,omitempty"`
}

// NewApiMpsaAccountsAccountIdGet200ResponseData instantiates a new ApiMpsaAccountsAccountIdGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMpsaAccountsAccountIdGet200ResponseData() *ApiMpsaAccountsAccountIdGet200ResponseData {
	this := ApiMpsaAccountsAccountIdGet200ResponseData{}
	return &this
}

// NewApiMpsaAccountsAccountIdGet200ResponseDataWithDefaults instantiates a new ApiMpsaAccountsAccountIdGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMpsaAccountsAccountIdGet200ResponseDataWithDefaults() *ApiMpsaAccountsAccountIdGet200ResponseData {
	this := ApiMpsaAccountsAccountIdGet200ResponseData{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetKey(v string) {
	o.Key = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetDescription(v string) {
	o.Description = &v
}

// GetDaysFromStartDate returns the DaysFromStartDate field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetDaysFromStartDate() string {
	if o == nil || IsNil(o.DaysFromStartDate) {
		var ret string
		return ret
	}
	return *o.DaysFromStartDate
}

// GetDaysFromStartDateOk returns a tuple with the DaysFromStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetDaysFromStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.DaysFromStartDate) {
		return nil, false
	}
	return o.DaysFromStartDate, true
}

// HasDaysFromStartDate returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasDaysFromStartDate() bool {
	if o != nil && !IsNil(o.DaysFromStartDate) {
		return true
	}

	return false
}

// SetDaysFromStartDate gets a reference to the given string and assigns it to the DaysFromStartDate field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetDaysFromStartDate(v string) {
	o.DaysFromStartDate = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetAlias() string {
	if o == nil || IsNil(o.Alias.Get()) {
		var ret string
		return ret
	}
	return *o.Alias.Get()
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Alias.Get(), o.Alias.IsSet()
}

// HasAlias returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasAlias() bool {
	if o != nil && o.Alias.IsSet() {
		return true
	}

	return false
}

// SetAlias gets a reference to the given NullableString and assigns it to the Alias field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetAlias(v string) {
	o.Alias.Set(&v)
}
// SetAliasNil sets the value for Alias to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetAliasNil() {
	o.Alias.Set(nil)
}

// UnsetAlias ensures that no value is present for Alias, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetAlias() {
	o.Alias.Unset()
}

// GetPrimaryBalance returns the PrimaryBalance field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetPrimaryBalance() ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner {
	if o == nil || IsNil(o.PrimaryBalance) {
		var ret ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner
		return ret
	}
	return *o.PrimaryBalance
}

// GetPrimaryBalanceOk returns a tuple with the PrimaryBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetPrimaryBalanceOk() (*ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner, bool) {
	if o == nil || IsNil(o.PrimaryBalance) {
		return nil, false
	}
	return o.PrimaryBalance, true
}

// HasPrimaryBalance returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasPrimaryBalance() bool {
	if o != nil && !IsNil(o.PrimaryBalance) {
		return true
	}

	return false
}

// SetPrimaryBalance gets a reference to the given ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner and assigns it to the PrimaryBalance field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetPrimaryBalance(v ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner) {
	o.PrimaryBalance = &v
}

// GetAvailableBalance returns the AvailableBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetAvailableBalance() string {
	if o == nil || IsNil(o.AvailableBalance.Get()) {
		var ret string
		return ret
	}
	return *o.AvailableBalance.Get()
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetAvailableBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailableBalance.Get(), o.AvailableBalance.IsSet()
}

// HasAvailableBalance returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasAvailableBalance() bool {
	if o != nil && o.AvailableBalance.IsSet() {
		return true
	}

	return false
}

// SetAvailableBalance gets a reference to the given NullableString and assigns it to the AvailableBalance field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetAvailableBalance(v string) {
	o.AvailableBalance.Set(&v)
}
// SetAvailableBalanceNil sets the value for AvailableBalance to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetAvailableBalanceNil() {
	o.AvailableBalance.Set(nil)
}

// UnsetAvailableBalance ensures that no value is present for AvailableBalance, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetAvailableBalance() {
	o.AvailableBalance.Unset()
}

// GetHolds returns the Holds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetHolds() string {
	if o == nil || IsNil(o.Holds.Get()) {
		var ret string
		return ret
	}
	return *o.Holds.Get()
}

// GetHoldsOk returns a tuple with the Holds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetHoldsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Holds.Get(), o.Holds.IsSet()
}

// HasHolds returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasHolds() bool {
	if o != nil && o.Holds.IsSet() {
		return true
	}

	return false
}

// SetHolds gets a reference to the given NullableString and assigns it to the Holds field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetHolds(v string) {
	o.Holds.Set(&v)
}
// SetHoldsNil sets the value for Holds to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetHoldsNil() {
	o.Holds.Set(nil)
}

// UnsetHolds ensures that no value is present for Holds, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetHolds() {
	o.Holds.Unset()
}

// GetInterest returns the Interest field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetInterest() ApiMpsaAccountsAccountIdGet200ResponseDataInterest {
	if o == nil || IsNil(o.Interest) {
		var ret ApiMpsaAccountsAccountIdGet200ResponseDataInterest
		return ret
	}
	return *o.Interest
}

// GetInterestOk returns a tuple with the Interest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetInterestOk() (*ApiMpsaAccountsAccountIdGet200ResponseDataInterest, bool) {
	if o == nil || IsNil(o.Interest) {
		return nil, false
	}
	return o.Interest, true
}

// HasInterest returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasInterest() bool {
	if o != nil && !IsNil(o.Interest) {
		return true
	}

	return false
}

// SetInterest gets a reference to the given ApiMpsaAccountsAccountIdGet200ResponseDataInterest and assigns it to the Interest field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetInterest(v ApiMpsaAccountsAccountIdGet200ResponseDataInterest) {
	o.Interest = &v
}

// GetInterestRates returns the InterestRates field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetInterestRates() []ApiMpsaAccountsAccountIdGet200ResponseDataInterestRatesInner {
	if o == nil || IsNil(o.InterestRates) {
		var ret []ApiMpsaAccountsAccountIdGet200ResponseDataInterestRatesInner
		return ret
	}
	return o.InterestRates
}

// GetInterestRatesOk returns a tuple with the InterestRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetInterestRatesOk() ([]ApiMpsaAccountsAccountIdGet200ResponseDataInterestRatesInner, bool) {
	if o == nil || IsNil(o.InterestRates) {
		return nil, false
	}
	return o.InterestRates, true
}

// HasInterestRates returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasInterestRates() bool {
	if o != nil && !IsNil(o.InterestRates) {
		return true
	}

	return false
}

// SetInterestRates gets a reference to the given []ApiMpsaAccountsAccountIdGet200ResponseDataInterestRatesInner and assigns it to the InterestRates field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetInterestRates(v []ApiMpsaAccountsAccountIdGet200ResponseDataInterestRatesInner) {
	o.InterestRates = v
}

// GetBankTheRest returns the BankTheRest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetBankTheRest() string {
	if o == nil || IsNil(o.BankTheRest.Get()) {
		var ret string
		return ret
	}
	return *o.BankTheRest.Get()
}

// GetBankTheRestOk returns a tuple with the BankTheRest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetBankTheRestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankTheRest.Get(), o.BankTheRest.IsSet()
}

// HasBankTheRest returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasBankTheRest() bool {
	if o != nil && o.BankTheRest.IsSet() {
		return true
	}

	return false
}

// SetBankTheRest gets a reference to the given NullableString and assigns it to the BankTheRest field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetBankTheRest(v string) {
	o.BankTheRest.Set(&v)
}
// SetBankTheRestNil sets the value for BankTheRest to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetBankTheRestNil() {
	o.BankTheRest.Set(nil)
}

// UnsetBankTheRest ensures that no value is present for BankTheRest, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetBankTheRest() {
	o.BankTheRest.Unset()
}

// GetOverdraftLimit returns the OverdraftLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetOverdraftLimit() string {
	if o == nil || IsNil(o.OverdraftLimit.Get()) {
		var ret string
		return ret
	}
	return *o.OverdraftLimit.Get()
}

// GetOverdraftLimitOk returns a tuple with the OverdraftLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetOverdraftLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverdraftLimit.Get(), o.OverdraftLimit.IsSet()
}

// HasOverdraftLimit returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasOverdraftLimit() bool {
	if o != nil && o.OverdraftLimit.IsSet() {
		return true
	}

	return false
}

// SetOverdraftLimit gets a reference to the given NullableString and assigns it to the OverdraftLimit field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetOverdraftLimit(v string) {
	o.OverdraftLimit.Set(&v)
}
// SetOverdraftLimitNil sets the value for OverdraftLimit to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetOverdraftLimitNil() {
	o.OverdraftLimit.Set(nil)
}

// UnsetOverdraftLimit ensures that no value is present for OverdraftLimit, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetOverdraftLimit() {
	o.OverdraftLimit.Unset()
}

// GetOverdraftPlan returns the OverdraftPlan field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetOverdraftPlan() string {
	if o == nil || IsNil(o.OverdraftPlan.Get()) {
		var ret string
		return ret
	}
	return *o.OverdraftPlan.Get()
}

// GetOverdraftPlanOk returns a tuple with the OverdraftPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetOverdraftPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverdraftPlan.Get(), o.OverdraftPlan.IsSet()
}

// HasOverdraftPlan returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasOverdraftPlan() bool {
	if o != nil && o.OverdraftPlan.IsSet() {
		return true
	}

	return false
}

// SetOverdraftPlan gets a reference to the given NullableString and assigns it to the OverdraftPlan field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetOverdraftPlan(v string) {
	o.OverdraftPlan.Set(&v)
}
// SetOverdraftPlanNil sets the value for OverdraftPlan to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetOverdraftPlanNil() {
	o.OverdraftPlan.Set(nil)
}

// UnsetOverdraftPlan ensures that no value is present for OverdraftPlan, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetOverdraftPlan() {
	o.OverdraftPlan.Unset()
}

// GetOpeningDate returns the OpeningDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetOpeningDate() string {
	if o == nil || IsNil(o.OpeningDate.Get()) {
		var ret string
		return ret
	}
	return *o.OpeningDate.Get()
}

// GetOpeningDateOk returns a tuple with the OpeningDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetOpeningDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpeningDate.Get(), o.OpeningDate.IsSet()
}

// HasOpeningDate returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasOpeningDate() bool {
	if o != nil && o.OpeningDate.IsSet() {
		return true
	}

	return false
}

// SetOpeningDate gets a reference to the given NullableString and assigns it to the OpeningDate field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetOpeningDate(v string) {
	o.OpeningDate.Set(&v)
}
// SetOpeningDateNil sets the value for OpeningDate to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetOpeningDateNil() {
	o.OpeningDate.Set(nil)
}

// UnsetOpeningDate ensures that no value is present for OpeningDate, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetOpeningDate() {
	o.OpeningDate.Unset()
}

// GetAssociatedAccounts returns the AssociatedAccounts field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetAssociatedAccounts() []interface{} {
	if o == nil || IsNil(o.AssociatedAccounts) {
		var ret []interface{}
		return ret
	}
	return o.AssociatedAccounts
}

// GetAssociatedAccountsOk returns a tuple with the AssociatedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetAssociatedAccountsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.AssociatedAccounts) {
		return nil, false
	}
	return o.AssociatedAccounts, true
}

// HasAssociatedAccounts returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasAssociatedAccounts() bool {
	if o != nil && !IsNil(o.AssociatedAccounts) {
		return true
	}

	return false
}

// SetAssociatedAccounts gets a reference to the given []interface{} and assigns it to the AssociatedAccounts field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetAssociatedAccounts(v []interface{}) {
	o.AssociatedAccounts = v
}

// GetBusinessFunctions returns the BusinessFunctions field value if set, zero value otherwise.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetBusinessFunctions() []ApiMpsaAccountsAccountIdGet200ResponseDataBusinessFunctionsInner {
	if o == nil || IsNil(o.BusinessFunctions) {
		var ret []ApiMpsaAccountsAccountIdGet200ResponseDataBusinessFunctionsInner
		return ret
	}
	return o.BusinessFunctions
}

// GetBusinessFunctionsOk returns a tuple with the BusinessFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetBusinessFunctionsOk() ([]ApiMpsaAccountsAccountIdGet200ResponseDataBusinessFunctionsInner, bool) {
	if o == nil || IsNil(o.BusinessFunctions) {
		return nil, false
	}
	return o.BusinessFunctions, true
}

// HasBusinessFunctions returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasBusinessFunctions() bool {
	if o != nil && !IsNil(o.BusinessFunctions) {
		return true
	}

	return false
}

// SetBusinessFunctions gets a reference to the given []ApiMpsaAccountsAccountIdGet200ResponseDataBusinessFunctionsInner and assigns it to the BusinessFunctions field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetBusinessFunctions(v []ApiMpsaAccountsAccountIdGet200ResponseDataBusinessFunctionsInner) {
	o.BusinessFunctions = v
}

// GetClosingDate returns the ClosingDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetClosingDate() string {
	if o == nil || IsNil(o.ClosingDate.Get()) {
		var ret string
		return ret
	}
	return *o.ClosingDate.Get()
}

// GetClosingDateOk returns a tuple with the ClosingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) GetClosingDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosingDate.Get(), o.ClosingDate.IsSet()
}

// HasClosingDate returns a boolean if a field has been set.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) HasClosingDate() bool {
	if o != nil && o.ClosingDate.IsSet() {
		return true
	}

	return false
}

// SetClosingDate gets a reference to the given NullableString and assigns it to the ClosingDate field.
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetClosingDate(v string) {
	o.ClosingDate.Set(&v)
}
// SetClosingDateNil sets the value for ClosingDate to be an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) SetClosingDateNil() {
	o.ClosingDate.Set(nil)
}

// UnsetClosingDate ensures that no value is present for ClosingDate, not even an explicit nil
func (o *ApiMpsaAccountsAccountIdGet200ResponseData) UnsetClosingDate() {
	o.ClosingDate.Unset()
}

func (o ApiMpsaAccountsAccountIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMpsaAccountsAccountIdGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DaysFromStartDate) {
		toSerialize["daysFromStartDate"] = o.DaysFromStartDate
	}
	if o.Alias.IsSet() {
		toSerialize["alias"] = o.Alias.Get()
	}
	if !IsNil(o.PrimaryBalance) {
		toSerialize["primaryBalance"] = o.PrimaryBalance
	}
	if o.AvailableBalance.IsSet() {
		toSerialize["availableBalance"] = o.AvailableBalance.Get()
	}
	if o.Holds.IsSet() {
		toSerialize["holds"] = o.Holds.Get()
	}
	if !IsNil(o.Interest) {
		toSerialize["interest"] = o.Interest
	}
	if !IsNil(o.InterestRates) {
		toSerialize["interestRates"] = o.InterestRates
	}
	if o.BankTheRest.IsSet() {
		toSerialize["bankTheRest"] = o.BankTheRest.Get()
	}
	if o.OverdraftLimit.IsSet() {
		toSerialize["overdraftLimit"] = o.OverdraftLimit.Get()
	}
	if o.OverdraftPlan.IsSet() {
		toSerialize["overdraftPlan"] = o.OverdraftPlan.Get()
	}
	if o.OpeningDate.IsSet() {
		toSerialize["openingDate"] = o.OpeningDate.Get()
	}
	if !IsNil(o.AssociatedAccounts) {
		toSerialize["associatedAccounts"] = o.AssociatedAccounts
	}
	if !IsNil(o.BusinessFunctions) {
		toSerialize["businessFunctions"] = o.BusinessFunctions
	}
	if o.ClosingDate.IsSet() {
		toSerialize["closingDate"] = o.ClosingDate.Get()
	}
	return toSerialize, nil
}

type NullableApiMpsaAccountsAccountIdGet200ResponseData struct {
	value *ApiMpsaAccountsAccountIdGet200ResponseData
	isSet bool
}

func (v NullableApiMpsaAccountsAccountIdGet200ResponseData) Get() *ApiMpsaAccountsAccountIdGet200ResponseData {
	return v.value
}

func (v *NullableApiMpsaAccountsAccountIdGet200ResponseData) Set(val *ApiMpsaAccountsAccountIdGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMpsaAccountsAccountIdGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMpsaAccountsAccountIdGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMpsaAccountsAccountIdGet200ResponseData(val *ApiMpsaAccountsAccountIdGet200ResponseData) *NullableApiMpsaAccountsAccountIdGet200ResponseData {
	return &NullableApiMpsaAccountsAccountIdGet200ResponseData{value: val, isSet: true}
}

func (v NullableApiMpsaAccountsAccountIdGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMpsaAccountsAccountIdGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


