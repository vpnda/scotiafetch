/*
secure.scotiabank.com.har Mitmproxy2Swagger

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner{}

// ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner struct for ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner
type ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner struct {
	Key                       *string                                                                `json:"key,omitempty"`
	Id                        *string                                                                `json:"id,omitempty"`
	Description               *string                                                                `json:"description,omitempty"`
	DescriptionLines          []string                                                               `json:"descriptionLines,omitempty"`
	SubDescription            NullableString                                                         `json:"subDescription,omitempty"`
	CleanDescription          NullableString                                                         `json:"cleanDescription,omitempty"`
	MnemonicCode              NullableString                                                         `json:"mnemonicCode,omitempty"`
	Type                      NullableString                                                         `json:"type,omitempty"`
	TsysCode                  NullableString                                                         `json:"tsysCode,omitempty"`
	IsTsys                    *bool                                                                  `json:"isTsys,omitempty"`
	IsDisputable              *string                                                                `json:"isDisputable,omitempty"`
	OriginalAmount            *ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner `json:"originalAmount,omitempty"`
	RunningBalance            NullableString                                                         `json:"runningBalance,omitempty"`
	AssociatedCardNumber      *string                                                                `json:"associatedCardNumber,omitempty"`
	PurchaseCountryCode       NullableString                                                         `json:"purchaseCountryCode,omitempty"`
	OutOfCountryIndicator     NullableString                                                         `json:"outOfCountryIndicator,omitempty"`
	ReferenceNumber           NullableString                                                         `json:"referenceNumber,omitempty"`
	ReasonCode                NullableString                                                         `json:"reasonCode,omitempty"`
	Status                    *string                                                                `json:"status,omitempty"`
	RecurringPaymentIndicator *string                                                                `json:"recurringPaymentIndicator,omitempty"`
	StatementIndicator        NullableString                                                         `json:"statementIndicator,omitempty"`
	FromAccount               NullableString                                                         `json:"fromAccount,omitempty"`
	ToAccount                 NullableString                                                         `json:"toAccount,omitempty"`
	PurchaseType              NullableString                                                         `json:"purchaseType,omitempty"`
	RewardsCategory           NullableString                                                         `json:"rewardsCategory,omitempty"`
	RewardCard                NullableString                                                         `json:"rewardCard,omitempty"`
	Category                  NullableString                                                         `json:"category,omitempty"`
	UserInputTag              NullableString                                                         `json:"userInputTag,omitempty"`
	Cheque                    NullableString                                                         `json:"cheque,omitempty"`
	Merchant                  *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerMerchant   `json:"merchant,omitempty"`
	Enriched                  *bool                                                                  `json:"enriched,omitempty"`
	AcquirerReferenceNumber   NullableString                                                         `json:"acquirerReferenceNumber,omitempty"`
	TransactionId             *string                                                                `json:"transactionId,omitempty"`
	TransactionKey            *string                                                                `json:"transactionKey,omitempty"`
	TransactionDate           *string                                                                `json:"transactionDate,omitempty"`
	TransactionCode           NullableString                                                         `json:"transactionCode,omitempty"`
	TransactionAmount         *ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner `json:"transactionAmount,omitempty"`
	TransactionType           *string                                                                `json:"transactionType,omitempty"`
	TransactionCategory       NullableString                                                         `json:"transactionCategory,omitempty"`
	Subdescription            NullableString                                                         `json:"subdescription,omitempty"`
}

// NewApiCreditCreditIdTransactionsGet200ResponseDataPendingInner instantiates a new ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCreditCreditIdTransactionsGet200ResponseDataPendingInner() *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner {
	this := ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner{}
	return &this
}

// NewApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerWithDefaults instantiates a new ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerWithDefaults() *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner {
	this := ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetKey(v string) {
	o.Key = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionLines returns the DescriptionLines field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetDescriptionLines() []string {
	if o == nil || IsNil(o.DescriptionLines) {
		var ret []string
		return ret
	}
	return o.DescriptionLines
}

// GetDescriptionLinesOk returns a tuple with the DescriptionLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetDescriptionLinesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DescriptionLines, o.DescriptionLines != nil
}

// HasDescriptionLines returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasDescriptionLines() bool {
	if o != nil && o.DescriptionLines != nil {
		return true
	}

	return false
}

// SetDescriptionLines gets a reference to the given NullableString and assigns it to the DescriptionLines field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetDescriptionLines(v []string) {
	o.DescriptionLines = v
}

// SetDescriptionLinesNil sets the value for DescriptionLines to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetDescriptionLinesNil() {
	o.DescriptionLines = nil
}

// UnsetDescriptionLines ensures that no value is present for DescriptionLines, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetDescriptionLines() {
	o.DescriptionLines = nil
}

// GetSubDescription returns the SubDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetSubDescription() string {
	if o == nil || IsNil(o.SubDescription.Get()) {
		var ret string
		return ret
	}
	return *o.SubDescription.Get()
}

// GetSubDescriptionOk returns a tuple with the SubDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetSubDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubDescription.Get(), o.SubDescription.IsSet()
}

// HasSubDescription returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasSubDescription() bool {
	if o != nil && o.SubDescription.IsSet() {
		return true
	}

	return false
}

// SetSubDescription gets a reference to the given NullableString and assigns it to the SubDescription field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetSubDescription(v string) {
	o.SubDescription.Set(&v)
}

// SetSubDescriptionNil sets the value for SubDescription to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetSubDescriptionNil() {
	o.SubDescription.Set(nil)
}

// UnsetSubDescription ensures that no value is present for SubDescription, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetSubDescription() {
	o.SubDescription.Unset()
}

// GetCleanDescription returns the CleanDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetCleanDescription() string {
	if o == nil || IsNil(o.CleanDescription.Get()) {
		var ret string
		return ret
	}
	return *o.CleanDescription.Get()
}

// GetCleanDescriptionOk returns a tuple with the CleanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetCleanDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CleanDescription.Get(), o.CleanDescription.IsSet()
}

// HasCleanDescription returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasCleanDescription() bool {
	if o != nil && o.CleanDescription.IsSet() {
		return true
	}

	return false
}

// SetCleanDescription gets a reference to the given NullableString and assigns it to the CleanDescription field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetCleanDescription(v string) {
	o.CleanDescription.Set(&v)
}

// SetCleanDescriptionNil sets the value for CleanDescription to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetCleanDescriptionNil() {
	o.CleanDescription.Set(nil)
}

// UnsetCleanDescription ensures that no value is present for CleanDescription, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetCleanDescription() {
	o.CleanDescription.Unset()
}

// GetMnemonicCode returns the MnemonicCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetMnemonicCode() string {
	if o == nil || IsNil(o.MnemonicCode.Get()) {
		var ret string
		return ret
	}
	return *o.MnemonicCode.Get()
}

// GetMnemonicCodeOk returns a tuple with the MnemonicCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetMnemonicCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MnemonicCode.Get(), o.MnemonicCode.IsSet()
}

// HasMnemonicCode returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasMnemonicCode() bool {
	if o != nil && o.MnemonicCode.IsSet() {
		return true
	}

	return false
}

// SetMnemonicCode gets a reference to the given NullableString and assigns it to the MnemonicCode field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetMnemonicCode(v string) {
	o.MnemonicCode.Set(&v)
}

// SetMnemonicCodeNil sets the value for MnemonicCode to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetMnemonicCodeNil() {
	o.MnemonicCode.Set(nil)
}

// UnsetMnemonicCode ensures that no value is present for MnemonicCode, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetMnemonicCode() {
	o.MnemonicCode.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetType() {
	o.Type.Unset()
}

// GetTsysCode returns the TsysCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTsysCode() string {
	if o == nil || IsNil(o.TsysCode.Get()) {
		var ret string
		return ret
	}
	return *o.TsysCode.Get()
}

// GetTsysCodeOk returns a tuple with the TsysCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTsysCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TsysCode.Get(), o.TsysCode.IsSet()
}

// HasTsysCode returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTsysCode() bool {
	if o != nil && o.TsysCode.IsSet() {
		return true
	}

	return false
}

// SetTsysCode gets a reference to the given NullableString and assigns it to the TsysCode field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTsysCode(v string) {
	o.TsysCode.Set(&v)
}

// SetTsysCodeNil sets the value for TsysCode to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTsysCodeNil() {
	o.TsysCode.Set(nil)
}

// UnsetTsysCode ensures that no value is present for TsysCode, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetTsysCode() {
	o.TsysCode.Unset()
}

// GetIsTsys returns the IsTsys field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetIsTsys() bool {
	if o == nil || IsNil(o.IsTsys) {
		var ret bool
		return ret
	}
	return *o.IsTsys
}

// GetIsTsysOk returns a tuple with the IsTsys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetIsTsysOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTsys) {
		return nil, false
	}
	return o.IsTsys, true
}

// HasIsTsys returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasIsTsys() bool {
	if o != nil && !IsNil(o.IsTsys) {
		return true
	}

	return false
}

// SetIsTsys gets a reference to the given bool and assigns it to the IsTsys field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetIsTsys(v bool) {
	o.IsTsys = &v
}

// GetIsDisputable returns the IsDisputable field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetIsDisputable() string {
	if o == nil || IsNil(o.IsDisputable) {
		var ret string
		return ret
	}
	return *o.IsDisputable
}

// GetIsDisputableOk returns a tuple with the IsDisputable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetIsDisputableOk() (*string, bool) {
	if o == nil || IsNil(o.IsDisputable) {
		return nil, false
	}
	return o.IsDisputable, true
}

// HasIsDisputable returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasIsDisputable() bool {
	if o != nil && !IsNil(o.IsDisputable) {
		return true
	}

	return false
}

// SetIsDisputable gets a reference to the given string and assigns it to the IsDisputable field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetIsDisputable(v string) {
	o.IsDisputable = &v
}

// GetOriginalAmount returns the OriginalAmount field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetOriginalAmount() ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner {
	if o == nil || IsNil(o.OriginalAmount) {
		var ret ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner
		return ret
	}
	return *o.OriginalAmount
}

// GetOriginalAmountOk returns a tuple with the OriginalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetOriginalAmountOk() (*ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner, bool) {
	if o == nil || IsNil(o.OriginalAmount) {
		return nil, false
	}
	return o.OriginalAmount, true
}

// HasOriginalAmount returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasOriginalAmount() bool {
	if o != nil && !IsNil(o.OriginalAmount) {
		return true
	}

	return false
}

// SetOriginalAmount gets a reference to the given ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner and assigns it to the OriginalAmount field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetOriginalAmount(v ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner) {
	o.OriginalAmount = &v
}

// GetRunningBalance returns the RunningBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRunningBalance() string {
	if o == nil || IsNil(o.RunningBalance.Get()) {
		var ret string
		return ret
	}
	return *o.RunningBalance.Get()
}

// GetRunningBalanceOk returns a tuple with the RunningBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRunningBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunningBalance.Get(), o.RunningBalance.IsSet()
}

// HasRunningBalance returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasRunningBalance() bool {
	if o != nil && o.RunningBalance.IsSet() {
		return true
	}

	return false
}

// SetRunningBalance gets a reference to the given NullableString and assigns it to the RunningBalance field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRunningBalance(v string) {
	o.RunningBalance.Set(&v)
}

// SetRunningBalanceNil sets the value for RunningBalance to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRunningBalanceNil() {
	o.RunningBalance.Set(nil)
}

// UnsetRunningBalance ensures that no value is present for RunningBalance, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetRunningBalance() {
	o.RunningBalance.Unset()
}

// GetAssociatedCardNumber returns the AssociatedCardNumber field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetAssociatedCardNumber() string {
	if o == nil || IsNil(o.AssociatedCardNumber) {
		var ret string
		return ret
	}
	return *o.AssociatedCardNumber
}

// GetAssociatedCardNumberOk returns a tuple with the AssociatedCardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetAssociatedCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AssociatedCardNumber) {
		return nil, false
	}
	return o.AssociatedCardNumber, true
}

// HasAssociatedCardNumber returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasAssociatedCardNumber() bool {
	if o != nil && !IsNil(o.AssociatedCardNumber) {
		return true
	}

	return false
}

// SetAssociatedCardNumber gets a reference to the given string and assigns it to the AssociatedCardNumber field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetAssociatedCardNumber(v string) {
	o.AssociatedCardNumber = &v
}

// GetPurchaseCountryCode returns the PurchaseCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetPurchaseCountryCode() string {
	if o == nil || IsNil(o.PurchaseCountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseCountryCode.Get()
}

// GetPurchaseCountryCodeOk returns a tuple with the PurchaseCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetPurchaseCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseCountryCode.Get(), o.PurchaseCountryCode.IsSet()
}

// HasPurchaseCountryCode returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasPurchaseCountryCode() bool {
	if o != nil && o.PurchaseCountryCode.IsSet() {
		return true
	}

	return false
}

// SetPurchaseCountryCode gets a reference to the given NullableString and assigns it to the PurchaseCountryCode field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetPurchaseCountryCode(v string) {
	o.PurchaseCountryCode.Set(&v)
}

// SetPurchaseCountryCodeNil sets the value for PurchaseCountryCode to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetPurchaseCountryCodeNil() {
	o.PurchaseCountryCode.Set(nil)
}

// UnsetPurchaseCountryCode ensures that no value is present for PurchaseCountryCode, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetPurchaseCountryCode() {
	o.PurchaseCountryCode.Unset()
}

// GetOutOfCountryIndicator returns the OutOfCountryIndicator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetOutOfCountryIndicator() string {
	if o == nil || IsNil(o.OutOfCountryIndicator.Get()) {
		var ret string
		return ret
	}
	return *o.OutOfCountryIndicator.Get()
}

// GetOutOfCountryIndicatorOk returns a tuple with the OutOfCountryIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetOutOfCountryIndicatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutOfCountryIndicator.Get(), o.OutOfCountryIndicator.IsSet()
}

// HasOutOfCountryIndicator returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasOutOfCountryIndicator() bool {
	if o != nil && o.OutOfCountryIndicator.IsSet() {
		return true
	}

	return false
}

// SetOutOfCountryIndicator gets a reference to the given NullableString and assigns it to the OutOfCountryIndicator field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetOutOfCountryIndicator(v string) {
	o.OutOfCountryIndicator.Set(&v)
}

// SetOutOfCountryIndicatorNil sets the value for OutOfCountryIndicator to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetOutOfCountryIndicatorNil() {
	o.OutOfCountryIndicator.Set(nil)
}

// UnsetOutOfCountryIndicator ensures that no value is present for OutOfCountryIndicator, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetOutOfCountryIndicator() {
	o.OutOfCountryIndicator.Unset()
}

// GetReferenceNumber returns the ReferenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetReferenceNumber() string {
	if o == nil || IsNil(o.ReferenceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.ReferenceNumber.Get()
}

// GetReferenceNumberOk returns a tuple with the ReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetReferenceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceNumber.Get(), o.ReferenceNumber.IsSet()
}

// HasReferenceNumber returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasReferenceNumber() bool {
	if o != nil && o.ReferenceNumber.IsSet() {
		return true
	}

	return false
}

// SetReferenceNumber gets a reference to the given NullableString and assigns it to the ReferenceNumber field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetReferenceNumber(v string) {
	o.ReferenceNumber.Set(&v)
}

// SetReferenceNumberNil sets the value for ReferenceNumber to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetReferenceNumberNil() {
	o.ReferenceNumber.Set(nil)
}

// UnsetReferenceNumber ensures that no value is present for ReferenceNumber, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetReferenceNumber() {
	o.ReferenceNumber.Unset()
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode.Get()) {
		var ret string
		return ret
	}
	return *o.ReasonCode.Get()
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetReasonCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReasonCode.Get(), o.ReasonCode.IsSet()
}

// HasReasonCode returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasReasonCode() bool {
	if o != nil && o.ReasonCode.IsSet() {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given NullableString and assigns it to the ReasonCode field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetReasonCode(v string) {
	o.ReasonCode.Set(&v)
}

// SetReasonCodeNil sets the value for ReasonCode to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetReasonCodeNil() {
	o.ReasonCode.Set(nil)
}

// UnsetReasonCode ensures that no value is present for ReasonCode, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetReasonCode() {
	o.ReasonCode.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetStatus(v string) {
	o.Status = &v
}

// GetRecurringPaymentIndicator returns the RecurringPaymentIndicator field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRecurringPaymentIndicator() string {
	if o == nil || IsNil(o.RecurringPaymentIndicator) {
		var ret string
		return ret
	}
	return *o.RecurringPaymentIndicator
}

// GetRecurringPaymentIndicatorOk returns a tuple with the RecurringPaymentIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRecurringPaymentIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringPaymentIndicator) {
		return nil, false
	}
	return o.RecurringPaymentIndicator, true
}

// HasRecurringPaymentIndicator returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasRecurringPaymentIndicator() bool {
	if o != nil && !IsNil(o.RecurringPaymentIndicator) {
		return true
	}

	return false
}

// SetRecurringPaymentIndicator gets a reference to the given string and assigns it to the RecurringPaymentIndicator field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRecurringPaymentIndicator(v string) {
	o.RecurringPaymentIndicator = &v
}

// GetStatementIndicator returns the StatementIndicator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetStatementIndicator() string {
	if o == nil || IsNil(o.StatementIndicator.Get()) {
		var ret string
		return ret
	}
	return *o.StatementIndicator.Get()
}

// GetStatementIndicatorOk returns a tuple with the StatementIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetStatementIndicatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatementIndicator.Get(), o.StatementIndicator.IsSet()
}

// HasStatementIndicator returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasStatementIndicator() bool {
	if o != nil && o.StatementIndicator.IsSet() {
		return true
	}

	return false
}

// SetStatementIndicator gets a reference to the given NullableString and assigns it to the StatementIndicator field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetStatementIndicator(v string) {
	o.StatementIndicator.Set(&v)
}

// SetStatementIndicatorNil sets the value for StatementIndicator to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetStatementIndicatorNil() {
	o.StatementIndicator.Set(nil)
}

// UnsetStatementIndicator ensures that no value is present for StatementIndicator, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetStatementIndicator() {
	o.StatementIndicator.Unset()
}

// GetFromAccount returns the FromAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetFromAccount() string {
	if o == nil || IsNil(o.FromAccount.Get()) {
		var ret string
		return ret
	}
	return *o.FromAccount.Get()
}

// GetFromAccountOk returns a tuple with the FromAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetFromAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FromAccount.Get(), o.FromAccount.IsSet()
}

// HasFromAccount returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasFromAccount() bool {
	if o != nil && o.FromAccount.IsSet() {
		return true
	}

	return false
}

// SetFromAccount gets a reference to the given NullableString and assigns it to the FromAccount field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetFromAccount(v string) {
	o.FromAccount.Set(&v)
}

// SetFromAccountNil sets the value for FromAccount to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetFromAccountNil() {
	o.FromAccount.Set(nil)
}

// UnsetFromAccount ensures that no value is present for FromAccount, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetFromAccount() {
	o.FromAccount.Unset()
}

// GetToAccount returns the ToAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetToAccount() string {
	if o == nil || IsNil(o.ToAccount.Get()) {
		var ret string
		return ret
	}
	return *o.ToAccount.Get()
}

// GetToAccountOk returns a tuple with the ToAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetToAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToAccount.Get(), o.ToAccount.IsSet()
}

// HasToAccount returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasToAccount() bool {
	if o != nil && o.ToAccount.IsSet() {
		return true
	}

	return false
}

// SetToAccount gets a reference to the given NullableString and assigns it to the ToAccount field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetToAccount(v string) {
	o.ToAccount.Set(&v)
}

// SetToAccountNil sets the value for ToAccount to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetToAccountNil() {
	o.ToAccount.Set(nil)
}

// UnsetToAccount ensures that no value is present for ToAccount, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetToAccount() {
	o.ToAccount.Unset()
}

// GetPurchaseType returns the PurchaseType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetPurchaseType() string {
	if o == nil || IsNil(o.PurchaseType.Get()) {
		var ret string
		return ret
	}
	return *o.PurchaseType.Get()
}

// GetPurchaseTypeOk returns a tuple with the PurchaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetPurchaseTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PurchaseType.Get(), o.PurchaseType.IsSet()
}

// HasPurchaseType returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasPurchaseType() bool {
	if o != nil && o.PurchaseType.IsSet() {
		return true
	}

	return false
}

// SetPurchaseType gets a reference to the given NullableString and assigns it to the PurchaseType field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetPurchaseType(v string) {
	o.PurchaseType.Set(&v)
}

// SetPurchaseTypeNil sets the value for PurchaseType to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetPurchaseTypeNil() {
	o.PurchaseType.Set(nil)
}

// UnsetPurchaseType ensures that no value is present for PurchaseType, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetPurchaseType() {
	o.PurchaseType.Unset()
}

// GetRewardsCategory returns the RewardsCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRewardsCategory() string {
	if o == nil || IsNil(o.RewardsCategory.Get()) {
		var ret string
		return ret
	}
	return *o.RewardsCategory.Get()
}

// GetRewardsCategoryOk returns a tuple with the RewardsCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRewardsCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RewardsCategory.Get(), o.RewardsCategory.IsSet()
}

// HasRewardsCategory returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasRewardsCategory() bool {
	if o != nil && o.RewardsCategory.IsSet() {
		return true
	}

	return false
}

// SetRewardsCategory gets a reference to the given NullableString and assigns it to the RewardsCategory field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRewardsCategory(v string) {
	o.RewardsCategory.Set(&v)
}

// SetRewardsCategoryNil sets the value for RewardsCategory to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRewardsCategoryNil() {
	o.RewardsCategory.Set(nil)
}

// UnsetRewardsCategory ensures that no value is present for RewardsCategory, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetRewardsCategory() {
	o.RewardsCategory.Unset()
}

// GetRewardCard returns the RewardCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRewardCard() string {
	if o == nil || IsNil(o.RewardCard.Get()) {
		var ret string
		return ret
	}
	return *o.RewardCard.Get()
}

// GetRewardCardOk returns a tuple with the RewardCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetRewardCardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RewardCard.Get(), o.RewardCard.IsSet()
}

// HasRewardCard returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasRewardCard() bool {
	if o != nil && o.RewardCard.IsSet() {
		return true
	}

	return false
}

// SetRewardCard gets a reference to the given NullableString and assigns it to the RewardCard field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRewardCard(v string) {
	o.RewardCard.Set(&v)
}

// SetRewardCardNil sets the value for RewardCard to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetRewardCardNil() {
	o.RewardCard.Set(nil)
}

// UnsetRewardCard ensures that no value is present for RewardCard, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetRewardCard() {
	o.RewardCard.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetCategory() string {
	if o == nil || IsNil(o.Category.Get()) {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetCategory(v string) {
	o.Category.Set(&v)
}

// SetCategoryNil sets the value for Category to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetCategory() {
	o.Category.Unset()
}

// GetUserInputTag returns the UserInputTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetUserInputTag() string {
	if o == nil || IsNil(o.UserInputTag.Get()) {
		var ret string
		return ret
	}
	return *o.UserInputTag.Get()
}

// GetUserInputTagOk returns a tuple with the UserInputTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetUserInputTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserInputTag.Get(), o.UserInputTag.IsSet()
}

// HasUserInputTag returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasUserInputTag() bool {
	if o != nil && o.UserInputTag.IsSet() {
		return true
	}

	return false
}

// SetUserInputTag gets a reference to the given NullableString and assigns it to the UserInputTag field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetUserInputTag(v string) {
	o.UserInputTag.Set(&v)
}

// SetUserInputTagNil sets the value for UserInputTag to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetUserInputTagNil() {
	o.UserInputTag.Set(nil)
}

// UnsetUserInputTag ensures that no value is present for UserInputTag, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetUserInputTag() {
	o.UserInputTag.Unset()
}

// GetCheque returns the Cheque field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetCheque() string {
	if o == nil || IsNil(o.Cheque.Get()) {
		var ret string
		return ret
	}
	return *o.Cheque.Get()
}

// GetChequeOk returns a tuple with the Cheque field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetChequeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cheque.Get(), o.Cheque.IsSet()
}

// HasCheque returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasCheque() bool {
	if o != nil && o.Cheque.IsSet() {
		return true
	}

	return false
}

// SetCheque gets a reference to the given NullableString and assigns it to the Cheque field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetCheque(v string) {
	o.Cheque.Set(&v)
}

// SetChequeNil sets the value for Cheque to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetChequeNil() {
	o.Cheque.Set(nil)
}

// UnsetCheque ensures that no value is present for Cheque, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetCheque() {
	o.Cheque.Unset()
}

// GetMerchant returns the Merchant field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetMerchant() ApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerMerchant {
	if o == nil || IsNil(o.Merchant) {
		var ret ApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerMerchant
		return ret
	}
	return *o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetMerchantOk() (*ApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerMerchant, bool) {
	if o == nil || IsNil(o.Merchant) {
		return nil, false
	}
	return o.Merchant, true
}

// HasMerchant returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasMerchant() bool {
	if o != nil && !IsNil(o.Merchant) {
		return true
	}

	return false
}

// SetMerchant gets a reference to the given ApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerMerchant and assigns it to the Merchant field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetMerchant(v ApiCreditCreditIdTransactionsGet200ResponseDataPendingInnerMerchant) {
	o.Merchant = &v
}

// GetEnriched returns the Enriched field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetEnriched() bool {
	if o == nil || IsNil(o.Enriched) {
		var ret bool
		return ret
	}
	return *o.Enriched
}

// GetEnrichedOk returns a tuple with the Enriched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetEnrichedOk() (*bool, bool) {
	if o == nil || IsNil(o.Enriched) {
		return nil, false
	}
	return o.Enriched, true
}

// HasEnriched returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasEnriched() bool {
	if o != nil && !IsNil(o.Enriched) {
		return true
	}

	return false
}

// SetEnriched gets a reference to the given bool and assigns it to the Enriched field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetEnriched(v bool) {
	o.Enriched = &v
}

// GetAcquirerReferenceNumber returns the AcquirerReferenceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetAcquirerReferenceNumber() string {
	if o == nil || IsNil(o.AcquirerReferenceNumber.Get()) {
		var ret string
		return ret
	}
	return *o.AcquirerReferenceNumber.Get()
}

// GetAcquirerReferenceNumberOk returns a tuple with the AcquirerReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetAcquirerReferenceNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcquirerReferenceNumber.Get(), o.AcquirerReferenceNumber.IsSet()
}

// HasAcquirerReferenceNumber returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasAcquirerReferenceNumber() bool {
	if o != nil && o.AcquirerReferenceNumber.IsSet() {
		return true
	}

	return false
}

// SetAcquirerReferenceNumber gets a reference to the given NullableString and assigns it to the AcquirerReferenceNumber field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetAcquirerReferenceNumber(v string) {
	o.AcquirerReferenceNumber.Set(&v)
}

// SetAcquirerReferenceNumberNil sets the value for AcquirerReferenceNumber to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetAcquirerReferenceNumberNil() {
	o.AcquirerReferenceNumber.Set(nil)
}

// UnsetAcquirerReferenceNumber ensures that no value is present for AcquirerReferenceNumber, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetAcquirerReferenceNumber() {
	o.AcquirerReferenceNumber.Unset()
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransactionKey returns the TransactionKey field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionKey() string {
	if o == nil || IsNil(o.TransactionKey) {
		var ret string
		return ret
	}
	return *o.TransactionKey
}

// GetTransactionKeyOk returns a tuple with the TransactionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionKey) {
		return nil, false
	}
	return o.TransactionKey, true
}

// HasTransactionKey returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionKey() bool {
	if o != nil && !IsNil(o.TransactionKey) {
		return true
	}

	return false
}

// SetTransactionKey gets a reference to the given string and assigns it to the TransactionKey field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionKey(v string) {
	o.TransactionKey = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionCode.Get()
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionCode.Get(), o.TransactionCode.IsSet()
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionCode() bool {
	if o != nil && o.TransactionCode.IsSet() {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given NullableString and assigns it to the TransactionCode field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionCode(v string) {
	o.TransactionCode.Set(&v)
}

// SetTransactionCodeNil sets the value for TransactionCode to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionCodeNil() {
	o.TransactionCode.Set(nil)
}

// UnsetTransactionCode ensures that no value is present for TransactionCode, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetTransactionCode() {
	o.TransactionCode.Unset()
}

// GetTransactionAmount returns the TransactionAmount field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionAmount() ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner {
	if o == nil || IsNil(o.TransactionAmount) {
		var ret ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner
		return ret
	}
	return *o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionAmountOk() (*ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner, bool) {
	if o == nil || IsNil(o.TransactionAmount) {
		return nil, false
	}
	return o.TransactionAmount, true
}

// HasTransactionAmount returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionAmount() bool {
	if o != nil && !IsNil(o.TransactionAmount) {
		return true
	}

	return false
}

// SetTransactionAmount gets a reference to the given ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner and assigns it to the TransactionAmount field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionAmount(v ApiAccountsSummaryGet200ResponseDataProductsInnerPrimaryBalancesInner) {
	o.TransactionAmount = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetTransactionCategory returns the TransactionCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionCategory() string {
	if o == nil || IsNil(o.TransactionCategory.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionCategory.Get()
}

// GetTransactionCategoryOk returns a tuple with the TransactionCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetTransactionCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionCategory.Get(), o.TransactionCategory.IsSet()
}

// HasTransactionCategory returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasTransactionCategory() bool {
	if o != nil && o.TransactionCategory.IsSet() {
		return true
	}

	return false
}

// SetTransactionCategory gets a reference to the given NullableString and assigns it to the TransactionCategory field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionCategory(v string) {
	o.TransactionCategory.Set(&v)
}

// SetTransactionCategoryNil sets the value for TransactionCategory to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetTransactionCategoryNil() {
	o.TransactionCategory.Set(nil)
}

// UnsetTransactionCategory ensures that no value is present for TransactionCategory, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetTransactionCategory() {
	o.TransactionCategory.Unset()
}

// GetSubdescription returns the Subdescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetSubdescription() string {
	if o == nil || IsNil(o.Subdescription.Get()) {
		var ret string
		return ret
	}
	return *o.Subdescription.Get()
}

// GetSubdescriptionOk returns a tuple with the Subdescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) GetSubdescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subdescription.Get(), o.Subdescription.IsSet()
}

// HasSubdescription returns a boolean if a field has been set.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) HasSubdescription() bool {
	if o != nil && o.Subdescription.IsSet() {
		return true
	}

	return false
}

// SetSubdescription gets a reference to the given NullableString and assigns it to the Subdescription field.
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetSubdescription(v string) {
	o.Subdescription.Set(&v)
}

// SetSubdescriptionNil sets the value for Subdescription to be an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) SetSubdescriptionNil() {
	o.Subdescription.Set(nil)
}

// UnsetSubdescription ensures that no value is present for Subdescription, not even an explicit nil
func (o *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnsetSubdescription() {
	o.Subdescription.Unset()
}

func (o ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.DescriptionLines != nil {
		toSerialize["descriptionLines"] = o.DescriptionLines
	}
	if o.SubDescription.IsSet() {
		toSerialize["subDescription"] = o.SubDescription.Get()
	}
	if o.CleanDescription.IsSet() {
		toSerialize["cleanDescription"] = o.CleanDescription.Get()
	}
	if o.MnemonicCode.IsSet() {
		toSerialize["mnemonicCode"] = o.MnemonicCode.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.TsysCode.IsSet() {
		toSerialize["tsysCode"] = o.TsysCode.Get()
	}
	if !IsNil(o.IsTsys) {
		toSerialize["isTsys"] = o.IsTsys
	}
	if !IsNil(o.IsDisputable) {
		toSerialize["isDisputable"] = o.IsDisputable
	}
	if !IsNil(o.OriginalAmount) {
		toSerialize["originalAmount"] = o.OriginalAmount
	}
	if o.RunningBalance.IsSet() {
		toSerialize["runningBalance"] = o.RunningBalance.Get()
	}
	if !IsNil(o.AssociatedCardNumber) {
		toSerialize["associatedCardNumber"] = o.AssociatedCardNumber
	}
	if o.PurchaseCountryCode.IsSet() {
		toSerialize["purchaseCountryCode"] = o.PurchaseCountryCode.Get()
	}
	if o.OutOfCountryIndicator.IsSet() {
		toSerialize["outOfCountryIndicator"] = o.OutOfCountryIndicator.Get()
	}
	if o.ReferenceNumber.IsSet() {
		toSerialize["referenceNumber"] = o.ReferenceNumber.Get()
	}
	if o.ReasonCode.IsSet() {
		toSerialize["reasonCode"] = o.ReasonCode.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.RecurringPaymentIndicator) {
		toSerialize["recurringPaymentIndicator"] = o.RecurringPaymentIndicator
	}
	if o.StatementIndicator.IsSet() {
		toSerialize["statementIndicator"] = o.StatementIndicator.Get()
	}
	if o.FromAccount.IsSet() {
		toSerialize["fromAccount"] = o.FromAccount.Get()
	}
	if o.ToAccount.IsSet() {
		toSerialize["toAccount"] = o.ToAccount.Get()
	}
	if o.PurchaseType.IsSet() {
		toSerialize["purchaseType"] = o.PurchaseType.Get()
	}
	if o.RewardsCategory.IsSet() {
		toSerialize["rewardsCategory"] = o.RewardsCategory.Get()
	}
	if o.RewardCard.IsSet() {
		toSerialize["rewardCard"] = o.RewardCard.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.UserInputTag.IsSet() {
		toSerialize["userInputTag"] = o.UserInputTag.Get()
	}
	if o.Cheque.IsSet() {
		toSerialize["cheque"] = o.Cheque.Get()
	}
	if !IsNil(o.Merchant) {
		toSerialize["merchant"] = o.Merchant
	}
	if !IsNil(o.Enriched) {
		toSerialize["enriched"] = o.Enriched
	}
	if o.AcquirerReferenceNumber.IsSet() {
		toSerialize["acquirerReferenceNumber"] = o.AcquirerReferenceNumber.Get()
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.TransactionKey) {
		toSerialize["transactionKey"] = o.TransactionKey
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if o.TransactionCode.IsSet() {
		toSerialize["transactionCode"] = o.TransactionCode.Get()
	}
	if !IsNil(o.TransactionAmount) {
		toSerialize["transactionAmount"] = o.TransactionAmount
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	if o.TransactionCategory.IsSet() {
		toSerialize["transactionCategory"] = o.TransactionCategory.Get()
	}
	if o.Subdescription.IsSet() {
		toSerialize["subdescription"] = o.Subdescription.Get()
	}
	return toSerialize, nil
}

type NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner struct {
	value *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner
	isSet bool
}

func (v NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) Get() *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner {
	return v.value
}

func (v *NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) Set(val *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner(val *ApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) *NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner {
	return &NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner{value: val, isSet: true}
}

func (v NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCreditCreditIdTransactionsGet200ResponseDataPendingInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
